{"version":3,"sources":["../src/Helper.js"],"names":["indexName","dateRange","metrics","options","Options","requestObject","data","json","convert","splice","resolve","reject","getHistoricalData","indexNameChecker","dateRangeChecker","metricsChecker","method","uri","fromDate","toDate","yield1","pe","undefined","yield2","pb","yield3","dy","all","result","value","yield4","headers","Connection","qs","String","name","category","option","index","text","replace","toLowerCase","err","Error","hasOwnProperty","start","tz","format","e","subtract","end","allowedMetrics","wantedMetrics","metric"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;sFA2HO,iBAAiCA,SAAjC,EAA4CC,SAA5C,EAAuDC,OAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AACDC,mBADC,GACS,IAAIC,OAAJ,CAAYJ,SAAZ,EAAuBC,SAAvB,EAAkCC,OAAlC,EAA2CG,aADpD;AAAA;AAAA;AAAA,mBAGgB,8BAAeF,OAAf,CAHhB;;AAAA;AAGGG,gBAHH;AAICC,gBAJD,GAIQ,sBAAYC,OAAZ,CAAoBF,IAApB,EAA0B,CAA1B,CAJR;;AAKHC,iBAAKE,MAAL,CAAY,CAAC,CAAb,EAAgB,CAAhB;AALG,6CAMI,kBAAQC,OAAR,CAAgBH,IAAhB,CANJ;;AAAA;AAAA;AAAA;AAAA,6CAQI,kBAAQI,MAAR,aARJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;kBAAeC,iB;;;;;QA3ENC,gB,GAAAA,gB;QAqBAC,gB,GAAAA,gB;QAiCAC,c,GAAAA,c;;AAtGhB;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;IAEaX,O,WAAAA,O;AACX,mBAAYJ,SAAZ,EAAuBC,SAAvB,EAAkCC,OAAlC,EAA2C;AAAA;;AACzC,SAAKc,MAAL,GAAc,KAAd;AACA,SAAKC,GAAL,GACE,oFADF;AAEA,SAAKjB,SAAL,GAAiBA,SAAjB;AACA,SAAKkB,QAAL,GAAgBjB,UAAUiB,QAA1B;AACA,SAAKC,MAAL,GAAclB,UAAUkB,MAAxB;AACA,SAAKC,MAAL,GAAclB,QAAQmB,EAAR,GAAa,IAAb,GAAoBC,SAAlC;AACA,SAAKC,MAAL,GAAcrB,QAAQsB,EAAR,GAAa,IAAb,GAAoBF,SAAlC;AACA,SAAKG,MAAL,GAAcvB,QAAQwB,EAAR,GAAa,IAAb,GAAoBJ,SAAlC;;AAEA,QAAIK,MAAM,oBACR,CAAC,KAAKP,MAAN,EAAc,KAAKG,MAAnB,EAA2B,KAAKA,MAAhC,CADQ,EAER,UAACK,MAAD,EAASC,KAAT,EAAmB;AACjBD,gBAAUC,KAAV;AACD,KAJO,CAAV;AAMA,SAAKC,MAAL,GAAcH,MAAM,KAAN,GAAcL,SAA5B;AACD;;;;wBAEmB;AAClB,aAAO;AACLN,gBAAQ,KAAKA,MADR;AAELC,aAAK,KAAKA,GAFL;AAGLc,iBAAS;AACP,wBAAc,iBADP;AAEPC,sBAAY;AAFL,SAHJ;AAOLC,YAAI;AACFjC,qBAAW,KAAKA,SADd;AAEFkB,oBAAU,KAAKA,QAFb;AAGFC,kBAAQ,KAAKA,MAHX;AAIFC,kBAAQc,OAAO,KAAKd,MAAZ,CAJN;AAKFG,kBAAQW,OAAO,KAAKX,MAAZ,CALN;AAMFE,kBAAQS,OAAO,KAAKT,MAAZ,CANN;AAOFK,kBAAQI,OAAO,KAAKJ,MAAZ;AAPN;AAPC,OAAP;AAiBD;;;;;AAGI,SAASjB,gBAAT,CAA0Bb,SAA1B,EAAqC;AAC1C,MAAImC,aAAJ;AAD0C;AAAA;AAAA;;AAAA;AAE1C,iLAA8B;AAAA,UAArBC,QAAqB;;AAC5BD,aAAO,kBAAKC,SAASC,MAAd,EAAsB,iBAAS;AACpC,eACEC,MAAMC,IAAN,CAAWC,OAAX,CAAmB,KAAnB,EAA0B,EAA1B,EAA8BC,WAA9B,OACAzC,UAAUwC,OAAV,CAAkB,KAAlB,EAAyB,EAAzB,EAA6BC,WAA7B,EAFF;AAID,OALM,CAAP;;AAOA,UAAIN,IAAJ,EAAU;AACR,eAAOA,KAAKN,KAAZ;AACD;AACF;AAbyC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAe1C,MAAI,CAACM,IAAL,EAAW;AACT,QAAIO,MAAM,sBAAS,yCAAT,CAAV;AACA,UAAM,IAAIC,KAAJ,CAAUD,IAAI,EAAE1C,WAAWA,SAAb,EAAJ,CAAV,CAAN;AACD;AACF;;AAEM,SAASc,gBAAT,CAA0Bb,SAA1B,EAAqC;AAC1C,MAAIiB,iBAAJ;AAAA,MAAcC,eAAd;;AAEA,MAAI,CAAClB,UAAU2C,cAAV,CAAyB,OAAzB,CAAL,EAAwC;AACtC,UAAM,IAAID,KAAJ,CAAU,6BAAV,CAAN;AACD,GAFD,MAEO;AACL,QAAI;AACFzB,iBAAW,8BAAOjB,UAAU4C,KAAjB,EACRC,EADQ,CACL,cADK,EAERC,MAFQ,CAED,YAFC,CAAX;AAGD,KAJD,CAIE,OAAOC,CAAP,EAAU;AACV,YAAMA,CAAN;AACD;AACF;;AAED,MAAI,CAAC/C,UAAU2C,cAAV,CAAyB,KAAzB,CAAL,EAAsC;AACpCzB,aAAS,gCACN2B,EADM,CACH,cADG,EAENG,QAFM,CAEG,CAFH,EAEM,MAFN,EAGNF,MAHM,CAGC,YAHD,CAAT;AAID,GALD,MAKO;AACL,QAAI;AACF5B,eAAS,8BAAOlB,UAAUiD,GAAjB,EACNJ,EADM,CACH,cADG,EAENC,MAFM,CAEC,YAFD,CAAT;AAGD,KAJD,CAIE,OAAOC,CAAP,EAAU;AACV,YAAMA,CAAN;AACD;AACF;;AAED,SAAO,EAAE9B,UAAUA,QAAZ,EAAsBC,QAAQA,MAA9B,EAAP;AACD;;AAEM,SAASJ,cAAT,CAAwBb,OAAxB,EAAiC;AACtC,MAAIiD,iBAAiB,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,CAArB;;AAEA,MAAIC,gBAAgB;AAClB5B,QAAI,KADc;AAElBH,QAAI,KAFc;AAGlBK,QAAI;AAHc,GAApB;;AAHsC;AAAA;AAAA;;AAAA;AAStC,qDAAmBxB,OAAnB,iHAA4B;AAAA,UAAnBmD,MAAmB;;AAC1B,UAAI,qBAAQF,cAAR,EAAwBE,MAAxB,IAAkC,CAAtC,EAAyC;AACvC,YAAIX,MAAM,sBAAS,mCAAT,CAAV;AACA,cAAM,IAAIC,KAAJ,CAAUD,IAAI,EAAEW,QAAQA,MAAV,EAAJ,CAAV,CAAN;AACD,OAHD,MAGO;AACLD,sBAAcC,MAAd,IAAwB,IAAxB;AACD;AACF;AAhBqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAkBtC,SAAOD,aAAP;AACD","file":"Helper.js","sourcesContent":["import { reduce, find, template, indexOf, forEach } from \"lodash\";\nimport moment from \"moment-timezone\";\nimport requestPromise from \"request-promise\";\nimport tabletojson from \"tabletojson\";\nimport indices from \"./indices\";\n\nexport class Options {\n  constructor(indexName, dateRange, metrics) {\n    this.method = \"GET\";\n    this.uri =\n      \"https://www.nseindia.com/products/dynaContent/equities/indices/historical_pepb.jsp\";\n    this.indexName = indexName;\n    this.fromDate = dateRange.fromDate;\n    this.toDate = dateRange.toDate;\n    this.yield1 = metrics.pe ? \"pe\" : undefined;\n    this.yield2 = metrics.pb ? \"pb\" : undefined;\n    this.yield3 = metrics.dy ? \"dy\" : undefined;\n\n    let all = reduce(\n      [this.yield1, this.yield2, this.yield2],\n      (result, value) => {\n        result && value;\n      }\n    );\n    this.yield4 = all ? \"all\" : undefined;\n  }\n\n  get requestObject() {\n    return {\n      method: this.method,\n      uri: this.uri,\n      headers: {\n        \"User-Agent\": \"request-promise\",\n        Connection: \"keep-alive\"\n      },\n      qs: {\n        indexName: this.indexName,\n        fromDate: this.fromDate,\n        toDate: this.toDate,\n        yield1: String(this.yield1),\n        yield2: String(this.yield2),\n        yield3: String(this.yield3),\n        yield4: String(this.yield4)\n      }\n    };\n  }\n}\n\nexport function indexNameChecker(indexName) {\n  let name;\n  for (let category of indices) {\n    name = find(category.option, index => {\n      return (\n        index.text.replace(/\\s/g, \"\").toLowerCase() ===\n        indexName.replace(/\\s/g, \"\").toLowerCase()\n      );\n    });\n\n    if (name) {\n      return name.value;\n    }\n  }\n\n  if (!name) {\n    let err = template('indexName \"${indexName}\" does not exist');\n    throw new Error(err({ indexName: indexName }));\n  }\n}\n\nexport function dateRangeChecker(dateRange) {\n  let fromDate, toDate;\n\n  if (!dateRange.hasOwnProperty(\"start\")) {\n    throw new Error(\"dateRange.start not defined\");\n  } else {\n    try {\n      fromDate = moment(dateRange.start)\n        .tz(\"Asia/Kolkata\")\n        .format(\"DD-MM-YYYY\");\n    } catch (e) {\n      throw e;\n    }\n  }\n\n  if (!dateRange.hasOwnProperty(\"end\")) {\n    toDate = moment()\n      .tz(\"Asia/Kolkata\")\n      .subtract(1, \"days\")\n      .format(\"DD-MM-YYYY\");\n  } else {\n    try {\n      toDate = moment(dateRange.end)\n        .tz(\"Asia/Kolkata\")\n        .format(\"DD-MM-YYYY\");\n    } catch (e) {\n      throw e;\n    }\n  }\n\n  return { fromDate: fromDate, toDate: toDate };\n}\n\nexport function metricsChecker(metrics) {\n  let allowedMetrics = [\"pb\", \"pe\", \"dy\"];\n\n  let wantedMetrics = {\n    pb: false,\n    pe: false,\n    dy: false\n  };\n\n  for (let metric of metrics) {\n    if (indexOf(allowedMetrics, metric) < 0) {\n      let err = template('metric \"${metric}\" does not exist');\n      throw new Error(err({ metric: metric }));\n    } else {\n      wantedMetrics[metric] = true;\n    }\n  }\n\n  return wantedMetrics;\n}\n\nexport async function getHistoricalData(indexName, dateRange, metrics) {\n  let options = new Options(indexName, dateRange, metrics).requestObject;\n  try {\n    const data = await requestPromise(options);\n    let json = tabletojson.convert(data)[0];\n    json.splice(-1, 1);\n    return Promise.resolve(json);\n  } catch (err) {\n    return Promise.reject(err);\n  }\n}\n"]}